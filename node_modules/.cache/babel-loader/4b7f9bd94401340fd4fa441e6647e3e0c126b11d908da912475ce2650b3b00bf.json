{"ast":null,"code":"import _slicedToArray from\"C:/Users/ACER/Desktop/portfolio-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{GoogleMap,useJsApiLoader}from'@react-google-maps/api';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var containerStyle={width:'100%',height:'100%'};var center={lat:13.8172374,lng:100.5370354};function MyComponent(){var _useJsApiLoader=useJsApiLoader({id:'google-map-script',googleMapsApiKey:\"AIzaSyBdjxXSNpAnyW0lzE_uliQ121U4mkmSgPk\"}),isLoaded=_useJsApiLoader.isLoaded;var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),map=_React$useState2[0],setMap=_React$useState2[1];var onLoad=React.useCallback(function callback(map){// This is just an example of getting and using the map instance!!! don't just blindly copy!\nvar bounds=new window.google.maps.LatLngBounds(center);map.fitBounds(bounds);setMap(map);},[]);var onUnmount=React.useCallback(function callback(map){setMap(null);},[]);return isLoaded?/*#__PURE__*/_jsx(GoogleMap,{mapContainerStyle:containerStyle,center:center,zoom:10,onLoad:onLoad,onUnmount:onUnmount,children:/*#__PURE__*/_jsx(_Fragment,{})}):/*#__PURE__*/_jsx(_Fragment,{});}export default/*#__PURE__*/React.memo(MyComponent);","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","containerStyle","width","height","center","lat","lng","MyComponent","id","googleMapsApiKey","isLoaded","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"sources":["C:/Users/ACER/Desktop/portfolio-react/src/components/Contact/map.js"],"sourcesContent":["import React from 'react'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst center = {\n  lat: 13.8172374,\n  lng: 100.5370354\n};\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyBdjxXSNpAnyW0lzE_uliQ121U4mkmSgPk\"\n  })\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n  ) : <></>\n}\n\nexport default React.memo(MyComponent)"],"mappings":"2HAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,cAAc,KAAQ,wBAAwB,CAAC,gGAEnE,GAAMC,eAAc,CAAG,CACrBC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MACV,CAAC,CAED,GAAMC,OAAM,CAAG,CACbC,GAAG,CAAE,UAAU,CACfC,GAAG,CAAE,WACP,CAAC,CAED,QAASC,YAAW,EAAG,CACrB,oBAAqBP,cAAc,CAAC,CAClCQ,EAAE,CAAE,mBAAmB,CACvBC,gBAAgB,CAAE,yCACpB,CAAC,CAAC,CAHMC,QAAQ,iBAARA,QAAQ,CAKhB,oBAAsBZ,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC,oDAAnCC,GAAG,qBAAEC,MAAM,qBAElB,GAAMC,OAAM,CAAGhB,KAAK,CAACiB,WAAW,CAAC,QAASC,SAAQ,CAACJ,GAAG,CAAE,CACtD;AACA,GAAMK,OAAM,CAAG,GAAIC,OAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACjB,MAAM,CAAC,CAC1DQ,GAAG,CAACU,SAAS,CAACL,MAAM,CAAC,CAErBJ,MAAM,CAACD,GAAG,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMW,UAAS,CAAGzB,KAAK,CAACiB,WAAW,CAAC,QAASC,SAAQ,CAACJ,GAAG,CAAE,CACzDC,MAAM,CAAC,IAAI,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,MAAOH,SAAQ,cACX,KAAC,SAAS,EACR,iBAAiB,CAAET,cAAe,CAClC,MAAM,CAAEG,MAAO,CACf,IAAI,CAAE,EAAG,CACT,MAAM,CAAEU,MAAO,CACf,SAAS,CAAES,SAAU,uBAGrB,kBAAK,EACK,cACZ,kBAAK,CACX,CAEA,2BAAezB,KAAK,CAAC0B,IAAI,CAACjB,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}