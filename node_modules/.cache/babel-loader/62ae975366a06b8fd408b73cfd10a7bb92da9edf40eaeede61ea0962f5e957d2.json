{"ast":null,"code":"var _jsxFileName = \"/Users/thanet/Desktop/reactjs/portfolio-web/src/components/Dashboard/home.js\";\nimport { useRef } from 'react';\n/* import { auth, storage, db } from '../../firebase'; */\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { addDoc } from 'firebase/firestore';\nimport { collection } from 'firebase/firestore/lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  /*     const form = useRef();\n  \n      const submitPortfolio = (e) => {\n          e.preventDefault();\n          const name = form.current[0]?.value;\n          const description = form.current[1]?.value;\n          const url = form.current[2]?.value;\n          const image = form.current[3]?.files[0];\n  \n          const storageRef = ref(storage, `portfolio/${image.name}`);\n  \n          uploadBytes(storageRef, image).then(\n              (snapshot) => {\n                  getDownloadURL(snapshot.ref).then((downloadUrl) => {\n                      savePortfolio({\n                          name,\n                          description,\n                          url,\n                          image: downloadUrl\n                      })\n                  }, (error) => {\n                      console.log(error);\n                      savePortfolio({\n                          name,\n                          description,\n                          url,\n                          image: null\n                      })\n                  })\n              }, (error) => {\n                  console.log(error);\n                  savePortfolio({\n                      name,\n                      description,\n                      url,\n                      image: null\n                  })\n              }\n          )\n      }\n  \n      const savePortfolio = async (portfolio) => {\n          try {\n              await addDoc(collection(db, 'portfolio'), portfolio);\n              window.location.reload(false);\n          } catch (error) {\n              alert('Failed to add portfolio');\n          }\n      } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"asdasdasd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useRef","ref","uploadBytes","getDownloadURL","addDoc","collection","Home"],"sources":["/Users/thanet/Desktop/reactjs/portfolio-web/src/components/Dashboard/home.js"],"sourcesContent":["import { useRef } from 'react';\n/* import { auth, storage, db } from '../../firebase'; */\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { addDoc } from 'firebase/firestore';\nimport { collection } from 'firebase/firestore/lite';\n\n\nconst Home = () => {\n/*     const form = useRef();\n\n    const submitPortfolio = (e) => {\n        e.preventDefault();\n        const name = form.current[0]?.value;\n        const description = form.current[1]?.value;\n        const url = form.current[2]?.value;\n        const image = form.current[3]?.files[0];\n\n        const storageRef = ref(storage, `portfolio/${image.name}`);\n\n        uploadBytes(storageRef, image).then(\n            (snapshot) => {\n                getDownloadURL(snapshot.ref).then((downloadUrl) => {\n                    savePortfolio({\n                        name,\n                        description,\n                        url,\n                        image: downloadUrl\n                    })\n                }, (error) => {\n                    console.log(error);\n                    savePortfolio({\n                        name,\n                        description,\n                        url,\n                        image: null\n                    })\n                })\n            }, (error) => {\n                console.log(error);\n                savePortfolio({\n                    name,\n                    description,\n                    url,\n                    image: null\n                })\n            }\n        )\n    }\n\n    const savePortfolio = async (portfolio) => {\n        try {\n            await addDoc(collection(db, 'portfolio'), portfolio);\n            window.location.reload(false);\n        } catch (error) {\n            alert('Failed to add portfolio');\n        }\n    } */\n\n    return (\n        <div className=\"dashboard\">\n            <p>asdasdasd</p>\n        {/*     <form ref={form} onSubmit={submitPortfolio}>\n                <p><input type=\"text\" placeholder=\"Name\" /></p>\n                <p><textarea placeholder=\"Description\" /></p>\n                <p><input type=\"text\" placeholder=\"Url\" /></p>\n                <p><input type=\"file\" placeholder=\"Image\" /></p>\n                <button type=\"submit\">Submit</button>\n                <button onClick={() => auth.signOut()}>Sign out</button>\n            </form> */}\n        </div>\n    )\n}\n\nexport default Home;"],"mappings":";AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B;AACA,SAASC,GAAG,EAAEC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AACnE,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,UAAU,QAAQ,yBAAyB;AAAC;AAGrD,MAAMC,IAAI,GAAG,MAAM;EACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAgB;IAAA;IAAA;IAAA;EAAA,QASd;AAEd,CAAC;AAAA,KAhEKA,IAAI;AAkEV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}